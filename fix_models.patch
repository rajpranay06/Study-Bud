--- a/base/models.py
+++ b/base/models.py
@@ -23,12 +23,12 @@
         return self.name
 
 class Room(models.Model):
-    host = models.ForeignKey(User, on_delete=models.SET_NULL, null=True)
-    topic = models.ForeignKey(Topic, on_delete=models.SET_NULL, null=True)
+    host = models.ForeignKey('User', on_delete=models.SET_NULL, null=True)
+    topic = models.ForeignKey('Topic', on_delete=models.SET_NULL, null=True)
     name = models.CharField(max_length=200)
     description = models.TextField(null=True, blank=True)
 
-    participants = models.ManyToManyField(User, related_name="participants", blank=True)
+    participants = models.ManyToManyField('User', related_name="participants", blank=True)
     welcome_message = models.TextField(default="Welcome {user} to {room}!")
     is_private = models.BooleanField(default=False)
     
@@ -42,8 +42,8 @@
         return self.name
     
 class Message(models.Model):
-    user = models.ForeignKey(User, on_delete=models.CASCADE)
-    room = models.ForeignKey(Room, on_delete=models.CASCADE)
+    user = models.ForeignKey('User', on_delete=models.CASCADE)
+    room = models.ForeignKey('Room', on_delete=models.CASCADE)
     body = models.TextField()
     file = models.FileField(upload_to='message_files/', null=True, blank=True)
     is_image = models.BooleanField(default=False)
@@ -61,8 +61,8 @@
     
 
 class Poll(models.Model):
-    room = models.ForeignKey(Room, on_delete=models.CASCADE)
-    created_by = models.ForeignKey(User, on_delete=models.CASCADE)
+    room = models.ForeignKey('Room', on_delete=models.CASCADE)
+    created_by = models.ForeignKey('User', on_delete=models.CASCADE)
     question = models.CharField(max_length=255)
     created_at = models.DateTimeField(auto_now_add=True)
 
@@ -70,9 +70,9 @@
         return self.question
 
 class PollOption(models.Model):
-    poll = models.ForeignKey(Poll, on_delete=models.CASCADE, related_name="options")
+    poll = models.ForeignKey('Poll', on_delete=models.CASCADE, related_name="options")
     option_text = models.CharField(max_length=255)
-    votes = models.ManyToManyField(User, blank=True, related_name="poll_votes")
+    votes = models.ManyToManyField('User', blank=True, related_name="poll_votes")
 
     def vote_count(self):
         return self.votes.count()
@@ -83,8 +83,8 @@
     vote_count.boolean = True
 
 class EmojiReaction(models.Model):
-    message = models.ForeignKey(Message, on_delete=models.CASCADE, related_name='reactions')
-    user = models.ForeignKey(User, on_delete=models.CASCADE)
+    message = models.ForeignKey('Message', on_delete=models.CASCADE, related_name='reactions')
+    user = models.ForeignKey('User', on_delete=models.CASCADE)
     emoji = models.CharField(max_length=16)  # Store emoji unicode
     created_at = models.DateTimeField(auto_now_add=True)
 
@@ -92,8 +92,8 @@
         unique_together = ('message', 'user', 'emoji')
 
 class RoomJoinRequest(models.Model):
-    room = models.ForeignKey(Room, on_delete=models.CASCADE, related_name='join_requests')
-    user = models.ForeignKey(User, on_delete=models.CASCADE)
+    room = models.ForeignKey('Room', on_delete=models.CASCADE, related_name='join_requests')
+    user = models.ForeignKey('User', on_delete=models.CASCADE)
     created_at = models.DateTimeField(auto_now_add=True)
     STATUS_CHOICES = (
         ('pending', 'Pending'), 